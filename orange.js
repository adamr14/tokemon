var orange = function(x, y, size){
    this.position = new createVector(x, y);
    this.size=size;
    this.body = [[75.6875, 117.125, 0],[79.3125, 104.875, 0],[85.078125, 94.1875, 0],[92.984375, 85.0625, 0],[103.03125, 77.5, 0],[115.21875, 71.5, 0],[129.546875, 67.0625, 0],[146.015625, 64.1875, 0],[164.625, 62.875, 0],[185.375, 63.125, 0],[204.015625, 64.6875, 0],[220.546875, 67.5625, 0],[234.96875, 71.75, 0],[247.28125, 77.25, 0],[257.484375, 84.0625, 0],[265.578125, 92.1875, 0],[271.5625, 101.625, 0],[275.4375, 112.375, 0],[278.203125, 123.15625, 0],[279.859375, 133.96875, 0],[280.40625, 144.8125, 0],[279.84375, 155.6875, 0],[278.171875, 166.59375, 0],[275.390625, 177.53125, 0],[271.5, 188.5, 0],[266.5, 199.5, 0],[259.65625, 209.046875, 0],[250.96875, 217.140625, 0],[240.4375, 223.78125, 0],[228.0625, 228.96875, 0],[213.84375, 232.703125, 0],[197.78125, 234.984375, 0],[179.875, 235.8125, 0],[160.125, 235.1875, 0],[142.40625, 233.5, 0],[126.71875, 230.75, 0],[113.0625, 226.9375, 0],[101.4375, 222.0625, 0],[92.28125, 217.265625, 0],[85.59375, 212.546875, 0],[81.375, 207.90625, 0],[79.625, 203.34375, 0],[77.890625, 196.109375, 0],[76.171875, 186.203125, 0],[74.890625, 177.4375, 0],[74.046875, 169.8125, 0],[73.6875, 155.3125, 0],[73.75, 144.625, 0]];
    
    this.hat=[[66.125, 203.4375, 0],[67.875, 191.5625, 0],[70.765625, 179.96875, 0],[74.796875, 168.65625, 0],[79.96875, 157.625, 0],[86.28125, 146.875, 0],[93.734375, 136.40625, 0],[102.328125, 126.21875, 0],[112.0625, 116.3125, 0],[122.9375, 106.6875, 0],[135.0625, 98.390625, 0],[148.4375, 91.421875, 0],[163.0625, 85.78125, 0],[178.9375, 81.46875, 0],[196.0625, 78.484375, 0],[214.4375, 76.828125, 0],[234.0625, 76.5, 0],[254.9375, 77.5, 0],[274.09375, 79.703125, 0],[291.53125, 83.109375, 0],[307.25, 87.71875, 0],[321.25, 93.53125, 0],[333.53125, 100.546875, 0],[344.09375, 108.765625, 0],[352.9375, 118.1875, 0],[360.0625, 128.8125, 0],[366.15625, 139.96875, 0],[371.21875, 151.65625, 0],[375.25, 163.875, 0],[378.25, 176.625, 0],[380.21875, 189.90625, 0],[381.15625, 203.71875, 0],[381.0625, 218.0625, 0],[379.9375, 232.9375, 0],[377.28125, 245.34375, 0],[373.09375, 255.28125, 0],[367.375, 262.75, 0],[360.125, 267.75, 0],[351.34375, 270.28125, 0],[341.03125, 270.34375, 0],[329.1875, 267.9375, 0],[315.8125, 263.0625, 0],[301.9375, 258.671875, 0],[287.5625, 254.765625, 0],[272.6875, 251.34375, 0],[257.3125, 248.40625, 0],[241.4375, 245.953125, 0],[225.0625, 243.984375, 0],[208.1875, 242.5, 0],[190.8125, 241.5, 0],[174.4375, 241.3125, 0],[159.0625, 241.9375, 0],[144.6875, 243.375, 0],[131.3125, 245.625, 0],[118.9375, 248.6875, 0],[107.5625, 252.5625, 0],[97.1875, 257.25, 0],[87.8125, 262.75, 0],[79.6875, 266.984375, 0],[72.8125, 269.953125, 0],[67.1875, 271.65625, 0],[62.8125, 272.09375, 0],[59.609375, 271.84375, 0],[57.578125, 270.90625, 0],[56.71875, 269.28125, 0],[57.03125, 266.96875, 0],[57.640625, 262.59375, 0],[58.546875, 256.15625, 0],[59.375, 250.296875, 0],[60.125, 245.015625, 0],[61.6875, 234.125, 0],[62.875, 225.875, 0]];
    this.arm=[[159.9375, 55, 0],[161.0625, 51, 0],[163.125, 48.109375, 0],[166.125, 46.328125, 0],[170.0625, 45.65625, 0],[174.9375, 46.09375, 0],[180.75, 47.640625, 0],[187.5, 50.296875, 0],[195.1875, 54.0625, 0],[203.8125, 58.9375, 0],[211.59375, 65.546875, 0],[218.53125, 73.890625, 0],[224.625, 83.96875, 0],[229.875, 95.78125, 0],[234.28125, 109.328125, 0],[237.84375, 124.609375, 0],[240.5625, 141.625, 0],[242.4375, 160.375, 0],[244.375, 177.109375, 0],[246.375, 191.828125, 0],[248.4375, 204.53125, 0],[250.5625, 215.21875, 0],[252.75, 223.890625, 0],[255, 230.546875, 0],[257.3125, 235.1875, 0],[259.6875, 237.8125, 0],[261.5625, 240.359375, 0],[262.9375, 242.828125, 0],[263.8125, 245.21875, 0],[264.1875, 247.53125, 0],[264.0625, 249.765625, 0],[263.4375, 251.921875, 0],[262.3125, 254, 0],[260.6875, 256, 0],[258.875, 257.3125, 0],[256.875, 257.9375, 0],[254.6875, 257.875, 0],[252.3125, 257.125, 0],[249.75, 255.6875, 0],[247, 253.5625, 0],[244.0625, 250.75, 0],[240.9375, 247.25, 0],[238.328125, 244.703125, 0],[236.234375, 243.109375, 0],[234.65625, 242.46875, 0],[233.59375, 242.78125, 0],[233.046875, 244.046875, 0],[233.015625, 246.265625, 0],[233.5, 249.4375, 0],[234.5, 253.5625, 0],[235.0625, 257.265625, 0],[235.1875, 260.546875, 0],[234.875, 263.40625, 0],[234.125, 265.84375, 0],[232.9375, 267.859375, 0],[231.3125, 269.453125, 0],[229.25, 270.625, 0],[226.75, 271.375, 0],[224.46875, 271.515625, 0],[222.40625, 271.046875, 0],[220.5625, 269.96875, 0],[218.9375, 268.28125, 0],[217.53125, 265.984375, 0],[216.34375, 263.078125, 0],[215.375, 259.5625, 0],[214.625, 255.4375, 0],[213.875, 252.34375, 0],[213.125, 250.28125, 0],[212.375, 249.25, 0],[211.625, 249.25, 0],[210.875, 250.28125, 0],[210.125, 252.34375, 0],[209.375, 255.4375, 0],[208.625, 259.5625, 0],[207.71875, 263.171875, 0],[206.65625, 266.265625, 0],[205.4375, 268.84375, 0],[204.0625, 270.90625, 0],[202.53125, 272.453125, 0],[200.84375, 273.484375, 0],[199, 274, 0],[197, 274, 0],[195.453125, 273.0625, 0],[194.359375, 271.1875, 0],[193.71875, 268.375, 0],[193.53125, 264.625, 0],[193.796875, 259.9375, 0],[194.515625, 254.3125, 0],[195.6875, 247.75, 0],[197.3125, 240.25, 0],[198.875, 233.359375, 0],[200.375, 227.078125, 0],[201.8125, 221.40625, 0],[203.1875, 216.34375, 0],[204.5, 211.890625, 0],[205.75, 208.046875, 0],[206.9375, 204.8125, 0],[208.0625, 202.1875, 0],[208.859375, 198.25, 0],[209.328125, 193, 0],[209.46875, 186.4375, 0],[209.28125, 178.5625, 0],[208.765625, 169.375, 0],[207.921875, 158.875, 0],[206.75, 147.0625, 0],[205.25, 133.9375, 0],[203.25, 122.15625, 0],[200.75, 111.71875, 0],[197.75, 102.625, 0],[194.25, 94.875, 0],[190.9375, 88.765625, 0],[187.8125, 84.296875, 0],[184.875, 81.46875, 0],[182.125, 80.28125, 0],[178.828125, 78.296875, 0],[174.984375, 75.515625, 0],[171.828125, 73.03125, 0],[169.359375, 70.84375, 0],[165.9375, 66.5625, 0],[163.75, 63.375, 0]];
    this.legs =[[77.1875, 228.375, 0],[75.8125, 247.625, 0],[74.109375, 265.140625, 0],[72.078125, 280.921875, 0],[69.71875, 294.96875, 0],[67.03125, 307.28125, 0],[64.015625, 317.859375, 0],[60.671875, 326.703125, 0],[57, 333.8125, 0],[53, 339.1875, 0],[51.3125, 343.828125, 0],[51.9375, 347.734375, 0],[54.875, 350.90625, 0],[60.125, 353.34375, 0],[67.6875, 355.046875, 0],[77.5625, 356.015625, 0],[89.75, 356.25, 0],[104.25, 355.75, 0],[116.75, 354.765625, 0],[127.25, 353.296875, 0],[135.75, 351.34375, 0],[142.25, 348.90625, 0],[146.75, 345.984375, 0],[149.25, 342.578125, 0],[149.75, 338.6875, 0],[148.25, 334.3125, 0],[146.90625, 328.109375, 0],[145.71875, 320.078125, 0],[144.6875, 310.21875, 0],[143.8125, 298.53125, 0],[143.09375, 285.015625, 0],[142.53125, 269.671875, 0],[142.125, 252.5, 0],[141.875, 233.5, 0],[142.75, 216.734375, 0],[144.75, 202.203125, 0],[147.875, 189.90625, 0],[152.125, 179.84375, 0],[157.5, 172.015625, 0],[164, 166.421875, 0],[171.625, 163.0625, 0],[180.375, 161.9375, 0],[187.90625, 163.484375, 0],[194.21875, 167.703125, 0],[199.3125, 174.59375, 0],[203.1875, 184.15625, 0],[205.84375, 196.390625, 0],[207.28125, 211.296875, 0],[207.5, 228.875, 0],[206.5, 249.125, 0],[205.40625, 267.5, 0],[204.21875, 284, 0],[202.9375, 298.625, 0],[201.5625, 311.375, 0],[200.09375, 322.25, 0],[198.53125, 331.25, 0],[196.875, 338.375, 0],[195.125, 343.625, 0],[195.1875, 348.1875, 0],[197.0625, 352.0625, 0],[200.75, 355.25, 0],[206.25, 357.75, 0],[213.5625, 359.5625, 0],[222.6875, 360.6875, 0],[233.625, 361.125, 0],[246.375, 360.875, 0],[256.90625, 360, 0],[265.21875, 358.5, 0],[271.3125, 356.375, 0],[275.1875, 353.625, 0],[276.84375, 350.25, 0],[276.28125, 346.25, 0],[273.5, 341.625, 0],[268.5, 336.375, 0],[264.09375, 328.5, 0],[260.28125, 318, 0],[257.0625, 304.875, 0],[254.4375, 289.125, 0],[252.40625, 270.75, 0],[250.96875, 249.75, 0],[250.125, 226.125, 0],[249.875, 199.875, 0],[247.109375, 176.96875, 0],[241.828125, 157.40625, 0],[234.03125, 141.1875, 0],[223.71875, 128.3125, 0],[210.890625, 118.78125, 0],[195.546875, 112.59375, 0],[177.6875, 109.75, 0],[157.3125, 110.25, 0],[139.421875, 111.453125, 0],[124.015625, 113.359375, 0],[111.09375, 115.96875, 0],[100.65625, 119.28125, 0],[92.765625, 122.53125, 0],[87.421875, 125.71875, 0],[84.625, 128.84375, 0],[84.375, 131.90625, 0],[83.890625, 138.140625, 0],[83.171875, 147.546875, 0],[82.515625, 156.1875, 0],[81.921875, 164.0625, 0],[80.6875, 180.6875, 0],[79.75, 193.375, 0]];
    
    this.spots = [];
    for (var i=0; i<30; i++){
        var size=random(0, 15);
        var posX=random(-1, 1);
        var posY=random(-1, 1);
        this.spots.push([size, posX, posY]);
    }
};

orange.prototype.drawFront = function() {
    push();
    translate(this.position.x, this.position.y);
    scale(this.size*0.35);
    fill(15, 13, 117);
    //legs
    push();
    translate(-100, -5);
    scale(0.6);
    drawPart(this.legs, 1);
    pop();
    
    //body
    push();
    strokeWeight(1);
    stroke(120, 73, 20);
    fill(255, 140, 0);
    translate(-170, -150);
    drawPart(this.body, 1);
    pop();
    fill(145, 88, 31, 50);
    noStroke();
    for(var i =0; i<this.spots.length; i++){
        ellipse(60*this.spots[i][1], 60*this.spots[i][2], this.spots[i][0], this.spots[i][0]);
    }  
    //face
    
    //eyes
    fill(255, 255, 255);
    strokeWeight(1);
    stroke(0);
    arc(-20,-20, 20, 60, Math.PI, Math.PI*2);
    triangle(-30, -20, -10, -20, -20, -10);
    stroke(255, 255, 255);
    strokeWeight(4);
    line(-26, -20, -14, -20);
    stroke(0);
    strokeWeight(1);
    arc(20, -20, 20, 60, Math.PI, Math.PI*2);
    triangle(30, -20, 10, -20, 20, -10);
    stroke(255, 255, 255);
    strokeWeight(4);
    line(26, -20, 14, -20);
    
    fill(25, 49, 227);
    strokeWeight(1);
    stroke(0);
    arc(-20, -17, 12, 36, Math.PI, Math.PI*2);
    triangle(-26, -17, -14, -17, -20, -10);
    stroke(25, 49, 227);
    strokeWeight(2);
    line(-24, -17, -16, -17);
    strokeWeight(1);
    stroke(0);
    arc(20, -17, 12, 36, Math.PI, Math.PI*2);
    triangle(26, -17, 14, -17, 20, -10);
    stroke(25, 49, 227);
    strokeWeight(2);
    line(24, -17, 16, -17);
    
    fill(0);
    noStroke();
    arc(-20, -15, 8, 26, Math.PI, Math.PI*2);
    triangle(-24, -15, -16, -15, -20, -10);
    stroke(0);
    strokeWeight(2);
    fill(0);
    noStroke();
    arc(20, -15, 8, 26, Math.PI, Math.PI*2);
    triangle(24, -15, 16, -15, 20, -10);
    stroke(0);
    strokeWeight(2);
    
    noStroke();
    fill(255, 255, 255);
    ellipse(-21, -24, 4, 4);
    ellipse(19, -24, 4, 4);
    
    //nose
    stroke(0);
    fill(255, 162, 0);
    strokeWeight(1);
    rect(-15, 0, 35, 30, 13);
    
    //mouth
    strokeWeight(2);
    noFill();
    arc(2, 35, 80, 50, 0.5, Math.PI-0.5);
    arc(45, 42, 15, 15, Math.PI/2-0.8, 3*Math.PI/2-0.7);
    arc(-39, 42, 15, 15, 3*Math.PI/2+0.8, 6*Math.PI/2-0.7);
    
    //hat
    push();
    scale(0.5);
    translate(-210, -370);
    fill(15, 13, 117);
    drawPart(this.hat, 1);
    push();
    noFill();
    scale(0.9);
    translate(20, 10);
    drawPart(this.hat, 1);
    pop();
    pop();
    noFill();
    stroke(255, 255, 255);
    bezier(-70, -85, -50, -105, 40, -100, 84, -80);
    strokeWeight(1);
    bezier(-40, -95, -35, -130, -25, -140, 0, -145);
    bezier(60, -90, 60, -120, 30, -140, 20, -145);
    stroke(255, 255, 255);
    strokeWeight(8);
    push();
    rotate(0.08);
    translate(0, -4);
    line(5, -130, 10, -125);
    line(-5, -130, 5, -130); 
    line(-5, -130, -10, -125);
    line(-10, -125, -10, -120);
    line(-10, -120, -5, -115);
    line(-5, -115, 5, -115);
    line(5, -115, 10, -110);
    line(10, -110, 10, -105);
    line(10, -105, 5, -100);
    line(5, -100, -5, -100);
    line(-5, -100, -10, -105);
    stroke(255, 140, 0);
    strokeWeight(6);
    line(5, -130, 10, -125);
    line(-5, -130, 5, -130); 
    line(-5, -130, -10, -125);
    line(-10, -125, -10, -120);
    line(-10, -120, -5, -115);
    line(-5, -115, 5, -115);
    line(5, -115, 10, -110);
    line(10, -110, 10, -105);
    line(10, -105, 5, -100);
    line(5, -100, -5, -100);
    line(-5, -100, -10, -105);
    pop();
    //arms
    stroke(0);
    strokeWeight(1);
    fill(15, 13, 117);
    push();
    translate(-40, -40);
    scale(0.7);
    rotate(-0.2);
    drawPart(this.arm, 1);
    pop();
    push();
    translate(40, -40);
    scale(0.7);
    rotate(0.2);
    drawPart(this.arm, -1);
    pop();
    noFill();
    stroke(0);
    strokeWeight(1);
    arc(-88, -25, 20, 30, 3*Math.PI/2-0.6, 5*Math.PI/2+0.4);
    arc(88, -25, 20, 30, Math.PI/2-0.6, 3*Math.PI/2+1);
    
    pop();  
};

orange.prototype.drawBack = function(){
    push();
    translate(this.position.x, this.position.y);
    scale(this.size*0.35);
    fill(15, 13, 117);
    //legs
    push();
    translate(-100, -5);
    scale(0.6);
    drawPart(this.legs, 1);
    pop();
    
    //arms
    stroke(0);
    strokeWeight(1);
    fill(15, 13, 117);
    push();
    translate(-40, -40);
    scale(0.7);
    rotate(-0.2);
    drawPart(this.arm, 1);
    pop();
    push();
    translate(40, -40);
    scale(0.7);
    rotate(0.2);
    drawPart(this.arm, -1);
    pop();
    noFill();
    stroke(0);
    strokeWeight(1);
    arc(-88, -25, 20, 30, 3*Math.PI/2-0.6, 5*Math.PI/2+0.4);
    arc(88, -25, 20, 30, Math.PI/2-0.6, 3*Math.PI/2+1);

    //body
    push();
    strokeWeight(1);
    stroke(120, 73, 20);
    fill(255, 140, 0);
    translate(-170, -150);
    drawPart(this.body, 1);
    pop();
    fill(145, 88, 31, 50);
    noStroke();
    for(var i =0; i<this.spots.length; i++){
        ellipse(60*this.spots[i][1], 60*this.spots[i][2], this.spots[i][0], this.spots[i][0]);
    }  
    
    //hat
    push();
    scale(0.5);
    translate(-210, -370);
    fill(15, 13, 117);
    drawPart(this.hat, 1);
    push();
    noFill();
    scale(0.9);
    translate(20, 10);
    drawPart(this.hat, 1);
    pop();
    pop();
    noFill();
    stroke(255,255, 255);
    strokeWeight(1);
    bezier(-40, -55, -35, -130, -25, -140, 0, -210);
    bezier(60, -50, 60, -120, 30, -140, 20, -210);
    stroke(255, 255, 255);
    strokeWeight(8);
    
    
    pop();
}